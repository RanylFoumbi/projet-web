version: '3.7'
services:
  redis:
    image: "redis:7.2.5"
    container_name: "redis"
    env_file:
      - .env
    ports:
      - 6379:${REDIS_PORT}
    volumes:
      - redis-data:/data
    networks:
      - network
  db:
    image: postgres:16
    restart: always
    env_file:
      - .env
    ports:
      - "5432:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - network
  
  backend:
    container_name: "backend"
    build:
      context: ./
      dockerfile: backend/Dockerfile
    tty: true
    env_file:
      - .env
    ports:
      - 3000:3000
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      DATABASE_HOST: db
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
    restart: on-failure
    networks:
      - network

  frontend:
    container_name: "frontend"
    build:
      context: ./
      dockerfile: frontend/Dockerfile
    tty: true
    env_file:
      - .env
    ports:
      - 5173:5173
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
      - backend
    restart: on-failure
    networks:
      - network

volumes:
  redis-data:
  db-data:

networks:
  network:
    driver: bridge
    